function [attach_P,attach_B,vec_dir] = Stewartparam(G)
    alpha_P = G.alpha_P;       
    alpha_B = G.alpha_B;         
    r_B = G.r_B;           
    r_P = G.r_P;          
    origin_height = G.origin_height;

    % the angle coordinate of the points in platform
    theta_P=[alpha_P/2,...
             2*pi/3-alpha_P/2,...
             2*pi/3+alpha_P/2,...
             4*pi/3-alpha_P/2,...
             4*pi/3+alpha_P/2,...
             2*pi-alpha_P/2];
    % the angle coordinate of the points in base
    theta_B=[pi/3-alpha_B/2,...
             pi/3+alpha_B/2,...
             pi-alpha_B/2,...
             pi+alpha_B/2,...
             5*pi/3-alpha_B/2,...
             5*pi/3+alpha_B/2];
    % the coordiante points in platform
    % Format:
    %       x1      x2 ...
    %       y1      y2 ...
    %       z1      z2 ...
    attach_P=r_P*[[cos(theta_P(1)), sin(theta_P(1)),0]',...
                    [cos(theta_P(2)), sin(theta_P(2)),0]',...
                    [cos(theta_P(3)), sin(theta_P(3)),0]',...
                    [cos(theta_P(4)), sin(theta_P(4)),0]',...
                    [cos(theta_P(5)), sin(theta_P(5)),0]',...
                    [cos(theta_P(6)), sin(theta_P(6)),0]'];
    % the coordiante points in base
    % Format:
    %       x1      x2 ...
    %       y1      y2 ...
    %       z1      z2 ...
    attach_B=r_B*[[cos(theta_B(1)), sin(theta_B(1)),0]',...
                    [cos(theta_B(2)), sin(theta_B(2)),0]',...
                    [cos(theta_B(3)), sin(theta_B(3)),0]',...
                    [cos(theta_B(4)), sin(theta_B(4)),0]',...
                    [cos(theta_B(5)), sin(theta_B(5)),0]',...
                    [cos(theta_B(6)), sin(theta_B(6)),0]'];

    vector_origin=attach_P-attach_B+origin_height;
    for i =1 :6
        vec_dir(:,i)=vector_origin(:,i)/norm(vector_origin(:,i));
    end

end